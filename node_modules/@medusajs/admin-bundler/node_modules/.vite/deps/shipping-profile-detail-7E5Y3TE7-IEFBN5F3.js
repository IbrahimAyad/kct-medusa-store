import "./chunk-EGRHWZRV.js";
import {
  SectionRow
} from "./chunk-C6KLYUFY.js";
import {
  SingleColumnPage
} from "./chunk-3XLI6TEK.js";
import {
  SingleColumnPageSkeleton
} from "./chunk-OYOURVXX.js";
import {
  useDashboardExtension
} from "./chunk-UT557UZM.js";
import "./chunk-JIWIBYO5.js";
import "./chunk-XMLFM6ZI.js";
import "./chunk-UESAM5J2.js";
import {
  ActionMenu
} from "./chunk-SQJS63XZ.js";
import "./chunk-OC57Q4WC.js";
import {
  shippingProfileQueryKeys,
  useDeleteShippingProfile,
  useShippingProfile
} from "./chunk-NAVAVTBR.js";
import {
  queryClient
} from "./chunk-KZEAZRGV.js";
import "./chunk-S7K3MYSB.js";
import {
  sdk
} from "./chunk-MGWFURCB.js";
import {
  useTranslation
} from "./chunk-FSQ44SVG.js";
import "./chunk-WPKD3INM.js";
import {
  useLoaderData,
  useNavigate,
  useParams
} from "./chunk-2WRJVAK6.js";
import "./chunk-FZZ47AFW.js";
import "./chunk-2COJD4UJ.js";
import {
  Container,
  Heading,
  Trash,
  toast,
  usePrompt
} from "./chunk-7TA3O4Z5.js";
import "./chunk-NOBDUI2K.js";
import {
  require_jsx_runtime
} from "./chunk-JURSM5AU.js";
import "./chunk-VARPEBF3.js";
import "./chunk-ZP5CUZDC.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/@medusajs/dashboard/dist/shipping-profile-detail-7E5Y3TE7.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var ShippingProfileDetailBreadcrumb = (props) => {
  const { shipping_profile_id } = props.params || {};
  const { shipping_profile } = useShippingProfile(
    shipping_profile_id,
    void 0,
    {
      initialData: props.data,
      enabled: Boolean(shipping_profile_id)
    }
  );
  if (!shipping_profile) {
    return null;
  }
  return (0, import_jsx_runtime.jsx)("span", { children: shipping_profile.name });
};
var shippingProfileQuery = (id) => ({
  queryKey: shippingProfileQueryKeys.detail(id),
  queryFn: async () => sdk.admin.shippingProfile.retrieve(id)
});
var shippingProfileLoader = async ({ params }) => {
  const id = params.shipping_profile_id;
  const query = shippingProfileQuery(id);
  return queryClient.ensureQueryData(query);
};
var ShippingProfileGeneralSection = ({
  profile
}) => {
  const { t } = useTranslation();
  const prompt = usePrompt();
  const navigate = useNavigate();
  const { mutateAsync } = useDeleteShippingProfile(profile.id);
  const handleDelete = async () => {
    const res = await prompt({
      title: t("shippingProfile.delete.title"),
      description: t("shippingProfile.delete.description", {
        name: profile.name
      }),
      verificationText: profile.name,
      verificationInstruction: t("general.typeToConfirm"),
      confirmText: t("actions.delete"),
      cancelText: t("actions.cancel")
    });
    if (!res) {
      return;
    }
    await mutateAsync(void 0, {
      onSuccess: () => {
        toast.success(
          t("shippingProfile.delete.successToast", {
            name: profile.name
          })
        );
        navigate("/settings/locations/shipping-profiles", { replace: true });
      },
      onError: (error) => {
        toast.error(error.message);
      }
    });
  };
  return (0, import_jsx_runtime2.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime2.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime2.jsx)(Heading, { children: profile.name }),
      (0, import_jsx_runtime2.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: (0, import_jsx_runtime2.jsx)(Trash, {}),
                  label: t("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      )
    ] }),
    (0, import_jsx_runtime2.jsx)(SectionRow, { title: t("fields.type"), value: profile.type })
  ] });
};
var ShippingProfileDetail = () => {
  const { shipping_profile_id } = useParams();
  const initialData = useLoaderData();
  const { shipping_profile, isLoading, isError, error } = useShippingProfile(
    shipping_profile_id,
    void 0,
    { initialData }
  );
  const { getWidgets } = useDashboardExtension();
  if (isLoading || !shipping_profile) {
    return (0, import_jsx_runtime3.jsx)(SingleColumnPageSkeleton, { sections: 1, showJSON: true, showMetadata: true });
  }
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime3.jsx)(
    SingleColumnPage,
    {
      widgets: {
        before: getWidgets("shipping_profile.details.before"),
        after: getWidgets("shipping_profile.details.after")
      },
      showMetadata: true,
      showJSON: true,
      data: shipping_profile,
      children: (0, import_jsx_runtime3.jsx)(ShippingProfileGeneralSection, { profile: shipping_profile })
    }
  );
};
export {
  ShippingProfileDetailBreadcrumb as Breadcrumb,
  ShippingProfileDetail as Component,
  shippingProfileLoader as loader
};
//# sourceMappingURL=shipping-profile-detail-7E5Y3TE7-IEFBN5F3.js.map
