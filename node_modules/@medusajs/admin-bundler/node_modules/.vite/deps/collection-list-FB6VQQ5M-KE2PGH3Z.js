import {
  useCollectionTableColumns
} from "./chunk-KUJTPOBI.js";
import "./chunk-ICY2MZON.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-Z7JNCSGP.js";
import {
  _DataTable,
  useDataTable
} from "./chunk-OVTUYWY6.js";
import "./chunk-MNCUMGDK.js";
import "./chunk-JTFKFVR4.js";
import "./chunk-W2QVROAD.js";
import {
  SingleColumnPage
} from "./chunk-3XLI6TEK.js";
import {
  useCollectionTableQuery
} from "./chunk-UWVSQHSV.js";
import "./chunk-QTT2ZGSW.js";
import "./chunk-6ZGSJKHL.js";
import "./chunk-AG6S44LT.js";
import {
  useCollectionTableFilters
} from "./chunk-6Y4NBTXX.js";
import "./chunk-AB7TWJ4O.js";
import "./chunk-HEL36O3F.js";
import "./chunk-IW7XZC3L.js";
import "./chunk-BS2YZ3YO.js";
import "./chunk-YTFQR32Z.js";
import "./chunk-3RP6JNKQ.js";
import "./chunk-ZPMIOCCF.js";
import "./chunk-S6Y7SGAU.js";
import "./chunk-SZBZ4HZX.js";
import "./chunk-SZFGFZV3.js";
import "./chunk-ZCRBMCRE.js";
import "./chunk-NEAYXANW.js";
import "./chunk-XWOMOL5N.js";
import "./chunk-PLRGAOAM.js";
import "./chunk-PGM4XF67.js";
import "./chunk-6A5KAQL3.js";
import "./chunk-ZXVW7VE7.js";
import "./chunk-X5HQAIV7.js";
import "./chunk-LNH4KKOB.js";
import "./chunk-PWUDRQ7V.js";
import "./chunk-OYOURVXX.js";
import {
  useDashboardExtension
} from "./chunk-UT557UZM.js";
import "./chunk-JIWIBYO5.js";
import "./chunk-XMLFM6ZI.js";
import "./chunk-UESAM5J2.js";
import {
  ActionMenu
} from "./chunk-SQJS63XZ.js";
import "./chunk-OC57Q4WC.js";
import "./chunk-I2UAGZ5U.js";
import "./chunk-O2SHVWJ7.js";
import "./chunk-QJMXPFFL.js";
import "./chunk-LOUCI2Q4.js";
import "./chunk-XAMQAMS2.js";
import "./chunk-ROURSU5C.js";
import "./chunk-3KPNDMHA.js";
import "./chunk-ASAFUTMI.js";
import "./chunk-CUGIGQSE.js";
import "./chunk-EALJ6LYP.js";
import "./chunk-M2YD6SSP.js";
import "./chunk-H7RVGO5V.js";
import "./chunk-DIIJTXZ5.js";
import "./chunk-7VSODY7F.js";
import "./chunk-NAVAVTBR.js";
import "./chunk-GPU4IRKF.js";
import "./chunk-HVSYJRGA.js";
import "./chunk-YXEQJJQ6.js";
import "./chunk-SITKGSYT.js";
import "./chunk-LQUA6FVL.js";
import "./chunk-VHV5XFAR.js";
import {
  useCollections,
  useDeleteCollection
} from "./chunk-L4VVV4Q5.js";
import "./chunk-22K6ITTI.js";
import "./chunk-5PZIRSSS.js";
import "./chunk-WYOKNF2W.js";
import "./chunk-J5VA6PIN.js";
import "./chunk-MSCXQBUM.js";
import "./chunk-4QIH7XF5.js";
import "./chunk-NQP3QFYS.js";
import "./chunk-DEUZS3W7.js";
import "./chunk-UMSNNOPD.js";
import "./chunk-QQSOZAMU.js";
import "./chunk-7YF3433E.js";
import "./chunk-KZEAZRGV.js";
import "./chunk-S7K3MYSB.js";
import "./chunk-MGWFURCB.js";
import {
  useTranslation
} from "./chunk-FSQ44SVG.js";
import "./chunk-WPKD3INM.js";
import {
  Link
} from "./chunk-2WRJVAK6.js";
import {
  keepPreviousData
} from "./chunk-FZZ47AFW.js";
import "./chunk-2COJD4UJ.js";
import {
  Button,
  Container,
  Heading,
  PencilSquare,
  Text,
  Trash,
  createColumnHelper,
  usePrompt
} from "./chunk-7TA3O4Z5.js";
import "./chunk-NOBDUI2K.js";
import {
  require_jsx_runtime
} from "./chunk-JURSM5AU.js";
import "./chunk-VARPEBF3.js";
import {
  require_react
} from "./chunk-ZP5CUZDC.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/@medusajs/dashboard/dist/collection-list-FB6VQQ5M.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var CollectionRowActions = ({
  collection
}) => {
  const { t } = useTranslation();
  const prompt = usePrompt();
  const { mutateAsync } = useDeleteCollection(collection.id);
  const handleDeleteCollection = async () => {
    const res = await prompt({
      title: t("general.areYouSure"),
      description: t("collections.deleteWarning", {
        title: collection.title
      }),
      verificationText: collection.title,
      verificationInstruction: t("general.typeToConfirm"),
      confirmText: t("actions.delete"),
      cancelText: t("actions.cancel")
    });
    if (!res) {
      return;
    }
    await mutateAsync();
  };
  return (0, import_jsx_runtime.jsx)(
    ActionMenu,
    {
      groups: [
        {
          actions: [
            {
              label: t("actions.edit"),
              to: `/collections/${collection.id}/edit`,
              icon: (0, import_jsx_runtime.jsx)(PencilSquare, {})
            }
          ]
        },
        {
          actions: [
            {
              label: t("actions.delete"),
              onClick: handleDeleteCollection,
              icon: (0, import_jsx_runtime.jsx)(Trash, {}),
              disabled: !collection.id
            }
          ]
        }
      ]
    }
  );
};
var PAGE_SIZE = 20;
var CollectionListTable = () => {
  const { t } = useTranslation();
  const { searchParams, raw } = useCollectionTableQuery({ pageSize: PAGE_SIZE });
  const { collections, count, isError, error, isLoading } = useCollections(
    {
      ...searchParams,
      fields: "+products.id"
    },
    {
      placeholderData: keepPreviousData
    }
  );
  const filters = useCollectionTableFilters();
  const columns = useColumns();
  const { table } = useDataTable({
    data: collections ?? [],
    columns,
    count,
    enablePagination: true,
    getRowId: (row, index) => row.id ?? `${index}`,
    pageSize: PAGE_SIZE
  });
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime2.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime2.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime2.jsxs)("div", { children: [
        (0, import_jsx_runtime2.jsx)(Heading, { children: t("collections.domain") }),
        (0, import_jsx_runtime2.jsx)(Text, { className: "text-ui-fg-subtle", size: "small", children: t("collections.subtitle") })
      ] }),
      (0, import_jsx_runtime2.jsx)(Link, { to: "/collections/create", children: (0, import_jsx_runtime2.jsx)(Button, { size: "small", variant: "secondary", children: t("actions.create") }) })
    ] }),
    (0, import_jsx_runtime2.jsx)(
      _DataTable,
      {
        table,
        columns,
        pageSize: PAGE_SIZE,
        count,
        filters,
        orderBy: [
          { key: "title", label: t("fields.title") },
          { key: "handle", label: t("fields.handle") },
          { key: "created_at", label: t("fields.createdAt") },
          { key: "updated_at", label: t("fields.updatedAt") }
        ],
        search: true,
        navigateTo: (row) => `/collections/${row.original.id}`,
        queryObject: raw,
        isLoading
      }
    )
  ] });
};
var columnHelper = createColumnHelper();
var useColumns = () => {
  const base = useCollectionTableColumns();
  return (0, import_react.useMemo)(
    () => [
      ...base,
      columnHelper.display({
        id: "actions",
        cell: ({ row }) => (0, import_jsx_runtime2.jsx)(CollectionRowActions, { collection: row.original })
      })
    ],
    [base]
  );
};
var CollectionList = () => {
  const { getWidgets } = useDashboardExtension();
  return (0, import_jsx_runtime3.jsx)(
    SingleColumnPage,
    {
      widgets: {
        after: getWidgets("product_collection.list.after"),
        before: getWidgets("product_collection.list.before")
      },
      children: (0, import_jsx_runtime3.jsx)(CollectionListTable, {})
    }
  );
};
export {
  CollectionList as Component
};
//# sourceMappingURL=collection-list-FB6VQQ5M-KE2PGH3Z.js.map
